# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]
  repository_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      MEGAPLAN_LOGIN: ${{ secrets.MEGAPLAN_LOGIN }}
      MEGAPLAN_PASS: ${{ secrets.MEGAPLAN_PASS }}
      VIDEO_KEY: ${{ secrets.VIDEO_KEY }}
      SECURE_TOKEN: ${{ secrets.SECURE_TOKEN }}
      YANDEX_VER: ${{ secrets.YANDEX_VER }}
      API_KEY: ${{ secrets.API_KEY }}
      SITE_KEY: ${{ secrets.SITE_KEY }}
      BITRIX_SEC: ${{ secrets.BITRIX_SEC }}
      MATERIAL_TABLE_ID: ${{ secrets.MATERIAL_TABLE_ID }}
      MATERIAL_TABLE_KEY: ${{ secrets.MATERIAL_TABLE_KEY }}
      REPLAIN_CHAT_ID: ${{ secrets.REPLAIN_CHAT_ID }}
      COCKPIT_TOKEN: ${{ secrets.COCKPIT_TOKEN }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run npm preparation script
        run: npm install
        env:
          NPM_CONFIG_USERCONFIG: ./npmrc
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate job
        run: npm run generate

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.0
        with:
          name: public
          path: public

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: contains( github.ref, 'master')
    steps:
      - uses: actions/download-artifact@v2.0.5
        with:
          name: public

      - uses: kevinpainchaud/simple-ftp-deploy-action@v1.2.1
        with:
          ftp_host: ${{ secrets.FTP_SERVER }}
          ftp_username: ${{ secrets.FTP_USERNAME }}
          ftp_password: ${{ secrets.FTP_PASSWORD }}
          local_source_dir: "./"
          dist_target_dir: "./"
          delete: "true"
          other_flags: "--parallel=10"
          
  deployNext:
    runs-on: ubuntu-latest
    needs: [build]
    if: contains( github.ref, 'develop')
    steps:
      - uses: actions/download-artifact@v2.0.5
        with:
          name: public

      - uses: kevinpainchaud/simple-ftp-deploy-action@v1.2.1
        with:
          ftp_host: ${{ secrets.FTP_NEXT_SERVER }}
          ftp_username: ${{ secrets.FTP_NEXT_USERNAME }}
          ftp_password: ${{ secrets.FTP_NEXT_PASSWORD }}
          local_source_dir: "./"
          dist_target_dir: "./"
          delete: "true"
          other_flags: "--parallel=10"
